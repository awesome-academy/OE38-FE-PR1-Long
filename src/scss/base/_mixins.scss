@use 'sass:map';
@use './variables' as v;

@mixin fontFaces ($fontFaces) {
    @each $fontFace in $fontFaces {
        @each $fontFamily, $src, $format in $fontFace {
            font-family: $fontFamily;
            src: url($src) format($format);
        }
    }
}

@mixin crossBrowser($properties) {
    @each $property, $css in $properties {
        -webkit-#{$property} : $css;
        -moz-#{$property} : $css;
        -o-#{$property} : $css;
        #{$property} : $css;
    } 
}

@mixin mediaQueryMin($key) {
    $size: map.get(v.$breakpoints, $key);
    @media (min-width: $size) {
        @content;
    }
}

@mixin mediaQueryMax($key) {
    $size: map.get(v.$breakpoints, $key);
    @media (max-width: $size) {
        @content;
    }
}

@mixin position($position, $top: 0, $left: 0, $padding: 0, $margin: 0, $border: 0, $type: 'none') {
    padding: $padding;
    margin: $margin;
    @if $position == fixed or $position == absolute {
        position: $position;
        top: $top;
        left: $left;
        @if $position == absolute {
            @if $type == centerVertical {
                top: 50%;
                left: $left;
                @include crossBrowser((transform, translateY(-50%)));
            } @else if $type == centerHorizontal {
                top: $top;
                left: 50%;
                @include crossBrowser((transform, translateX(-50%)));
            } @else if $type == center {
                top: 50%;
                left: 50%;
                @include crossBrowser((transform, translate(-50%, -50%)));
            } 
        }
    }
}

@mixin transitionPreviousProps($opacity: 0, $transform: scale(1), $color: currentColor, $backgroundColor: currentColor, $transition: .2s, $zIndex: inherit, $listStyle: none) {
    @include transitionDoneProps($opacity, $transform, $color, $backgroundColor, $zIndex, $listStyle);
    transition: $transition;
}

@mixin transitionDoneProps ($opacity: 1, $transform: scale(1), $color: currentColor, $backgroundColor: currentColor, $zIndex: inherit, $listStyle: none) {
    @include crossBrowser((
            opacity: $opacity,
            transform: $transform
        )
    );
    list-style: $listStyle;
    color:  $color;
    background-color: $backgroundColor;
    z-index: $zIndex;
}

@mixin arrow($direction, $size, $backgroundColor) {
    width: 0;
    height: 0;
    border: $size solid transparent;
    @if $direction == left {
        border-right: $size solid $backgroundColor
    } @else if $direction == right {
        border-left: $size solid $backgroundColor
    } @else if $direction == up {
        border-bottom: $size solid $backgroundColor
    } @else if $direction == down {
        border-top: $size solid $backgroundColor
    }
}